#!/bin/bash
appname="cf"
region="us-west-2"
bucketname="vulndb7vjuthhndnvi5"

function test_stack {
    #url="https://omdul8jp29.execute-api.us-west-2.amazonaws.com/default/vulndb"
    url=$(aws cloudformation describe-stacks --stack-name cf --region us-west-2 --query "Stacks[].Outputs" | grep https | sed 's/"OutputValue": "//g' | sed 's/"//g' | awk '{$1=$1};1')
#    echo "GET Test"
#    curl -i -X GET -d @setup/sam-app_files/GET_event.json \
#      -H "Accept: application/json" \
#      -H "Content-Type: application/json" \
#      $url
#    echo ""
#    echo ""
    echo "POST Test"
    curl -i -X POST -d @setup/sam-app_files/POST_event.json \
      -H "Accept: application/json" \
      -H "Content-Type: application/json" \
      $url
    echo ""
    echo ""
#    echo "PUT Test"
#    curl -i -X PUT -d @setup/sam-app_files/PUT_event.json \
#      -H "Accept: application/json" \
#      -H "Content-Type: application/json" \
#      $url
#    echo ""
#    echo ""
#    echo "DELETE Test"
#    curl -i -X DELETE -d @setup/sam-app_files/DELETE_event.json \
#      -H "Accept: application/json" \
#      -H "Content-Type: application/json" \
#      $url
#    echo ""
#    echo ""
}

if [ "$1" == "create" ]
then
    # Create Bucket
    aws s3 mb s3://$bucketname --region $region
    sam init --runtime python3.7
    cd sam-app
    sam build
    sam package --output-template packaged.yaml --s3-bucket $bucketname
    sam deploy --template-file packaged.yaml --region $region \
      --capabilities CAPABILITY_IAM --stack-name $appname
    aws cloudformation describe-stacks --stack-name $appname --region us-west-2 --query "Stacks[].Outputs"
elif [ "$1" == "modify" ]
then
    cd sam-app
    sam build
    sam package --output-template packaged.yaml --s3-bucket $bucketname
    sam deploy --template-file packaged.yaml --region $region \
      --capabilities CAPABILITY_IAM --stack-name $appname
    aws cloudformation describe-stacks --stack-name $appname --region us-west-2 --query "Stacks[].Outputs"
    test_stack
elif [ "$1" == "delete" ]
then
    # Remove Bucket
    aws s3 rb s3://$bucketname --region $region --force

    # Remove Stack
    aws cloudformation delete-stack --stack-name $appname
    #rm -rf sam-app/
elif [ "$1" == "test" ]
then
  test_stack
else
    echo 'USAGE: ./stack < create | modify | delete | test >'
fi

